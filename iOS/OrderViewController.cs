// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using Foundation;
using UIKit;

namespace AppleTableView.iOS
{
	public partial class OrderViewController : UIViewController
	{
		public Product product { get; set;}

		private MyDatePicker dPicker;
		private PickerToolbarView dateToolbar;

		private UIPickerView amountPicker;
		private MyPickerModel amountModel;
		private PickerToolbarView amountToolbar;

		private UIPickerView addrPicker;
		private MyPickerModel addrModel;
		private PickerToolbarView addrToolbar;

		#region Amount Data Base
		private List<PickerContent> AmountContent;
		#endregion

		#region Address Data Base
		private List<PickerContent> AddressContent;
		#endregion

		public OrderViewController (IntPtr handle) : base (handle)
		{
			#region Picker Amount Data Set
			AmountContent = new List<PickerContent>();

			for (int i = 1; i < 50; i++)
			{
				//data.componentPath[0] = i;
				//data.title = i.ToString();
				AmountContent.Add(new PickerContent()
				{
					componentIndex = 0,
					componentPath = new List<int>()
					{
						i
					},
					title = i.ToString()
				});
			}
			#endregion

			#region Picker Address Data Set
			AddressContent = new List<PickerContent>()
			{
				new PickerContent()
				{
					componentIndex = 0,
					componentPath = new List<int>()
					{
						0
					},
					title = "台北市"
				},
				new PickerContent()
				{
					componentIndex = 0,
					componentPath = new List<int>()
					{
						1
					},
					title = "新北市"
				},
				new PickerContent()
				{
					componentIndex = 1,
					componentPath = new List<int>()
					{
						0, 0
					},
					title = "信義區"
				},
				new PickerContent()
				{
					componentIndex = 1,
					componentPath = new List<int>()
					{
						0, 1
					},
					title = "中山區"
				},
				new PickerContent()
				{
					componentIndex = 1,
					componentPath = new List<int>()
					{
						0, 2
					},
					title = "大同區"
				},
				new PickerContent()
				{
					componentIndex = 1,
					componentPath = new List<int>()
					{
						1, 0
					},
					title = "新店區"
				},
				new PickerContent()
				{
					componentIndex = 1,
					componentPath = new List<int>()
					{
						1, 1
					},
					title = "文山區"
				},
				new PickerContent()
				{
					componentIndex = 1,
					componentPath = new List<int>()
					{
						1, 2
					},
					title = "烏來區"
				},
				new PickerContent()
				{
					componentIndex = 2,
					componentPath = new List<int>()
					{
						0, 0, 0
					},
					title = "信義路"
				},
				new PickerContent()
				{
					componentIndex = 2,
					componentPath = new List<int>()
					{
						0, 0, 1
					},
					title = "忠孝東路"
				},
				new PickerContent()
				{
					componentIndex = 2,
					componentPath = new List<int>()
					{
						0, 0, 2
					},
					title = "敦化北路"
				},
				new PickerContent()
				{
					componentIndex = 2,
					componentPath = new List<int>()
					{
						1, 0, 0
					},
					title = "中正路"
				},
				new PickerContent()
				{
					componentIndex = 2,
					componentPath = new List<int>()
					{
						1, 0, 1
					},
					title = "北新路"
				},
				new PickerContent()
				{
					componentIndex = 2,
					componentPath = new List<int>()
					{
						1, 0, 2
					},
					title = "民權路"
				},
				new PickerContent()
				{
					componentIndex = 3,
					componentPath = new List<int>()
					{
						0, 0, 0, 0
					},
					title = "東區"
				}
			};
			#endregion
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			lblName.Text = product.Name;
			lblPrice.Text = product.Price;
			imgProduct.Image = UIImage.FromFile(product.Img);

			#region Date Picker
			dPicker = new MyDatePicker();
			dPicker.BackgroundColor = UIColor.White;
			dPicker.Mode = UIDatePickerMode.Date;

			dateToolbar = PickerToolbarView.Create();

			txtDate.InputView = dPicker;
			txtDate.InputAccessoryView = dateToolbar;
			dateToolbar.DoneEvent += _dateDone;
			dateToolbar.CancelEvent += _dateCancel;
			#endregion

			#region Amount Picker
			amountModel = new MyPickerModel(1, AmountContent);

			amountPicker = new UIPickerView();
			amountPicker.BackgroundColor = UIColor.White;
			amountPicker.Model = amountModel;

			amountToolbar = PickerToolbarView.Create();

			txtAmount.InputView = amountPicker;
			txtAmount.InputAccessoryView = amountToolbar;
			amountToolbar.DoneEvent += _amountDone;
			amountToolbar.CancelEvent += _amountCancel;
			#endregion

			#region Address Picker
			addrModel = new MyPickerModel(4, AddressContent);

			addrPicker = new UIPickerView();
			addrPicker.BackgroundColor = UIColor.White;
			addrPicker.Model = addrModel;

			addrToolbar = PickerToolbarView.Create();

			txtAddress.InputView = addrPicker;
			txtAddress.InputAccessoryView = addrToolbar;
			addrToolbar.DoneEvent += _addrDone;
			addrToolbar.CancelEvent += _addrCancel;
			#endregion
		}

		#region Toolbar's Event
		void _amountDone(object sender, EventArgs e)
		{
			txtAmount.Text = "";
			foreach (var title in amountModel.pickerSelectDone(amountPicker))
			{
				txtAmount.Text += title;
			}
			txtAmount.ResignFirstResponder();
		}
		void _amountCancel(object sender, EventArgs e)
		{
			txtAmount.ResignFirstResponder();
			amountModel.pickerSelectCancel(amountPicker);
		}

		void _addrDone(object sender, EventArgs e)
		{
			txtAddress.Text = "";
			foreach (var title in addrModel.pickerSelectDone(addrPicker))
			{
				txtAddress.Text += title;
			}
			txtAddress.ResignFirstResponder();
		}
		void _addrCancel(object sender, EventArgs e)
		{
			txtAddress.ResignFirstResponder();
			addrModel.pickerSelectCancel(addrPicker);
		}

		void _dateDone(object sender, EventArgs e)
		{
			DateTime dateTime = DateTime.SpecifyKind((DateTime)dPicker.Date, DateTimeKind.Unspecified);
			txtDate.Text = dateTime.ToString("MM-dd-yyyy");
			dPicker.initDate = dPicker.Date;
			txtDate.ResignFirstResponder();
		}
		void _dateCancel(object sender, EventArgs e)
		{
			txtDate.ResignFirstResponder();
			dPicker.SetDate(dPicker.initDate, false);
		}
		#endregion
	}
}
